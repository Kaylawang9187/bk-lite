networks:
  prod:

volumes:
  minio:
  rabbitmq:
  elasticsearch:

services:
  minio:
    image: ${DOCKER_IMAGE_MINIO}
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    networks:
      - prod
    profiles:
      - opspilot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/ready"]
  
  rabbitmq:
    image: ${DOCKER_IMAGE_RABBITMQ}
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASSWORD}
    ports:
      - "5672:5672"
    profiles:
      - opspilot
    networks:
      - prod
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
  
  elasticsearch:
    image: ${DOCKER_IMAGE_ELASTICSEARCH}
    restart: always
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: false
      xpack.security.http.ssl.enabled: false
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ES_JAVA_OPTS: -Xms2g -Xmx2g
    networks:
      - prod
    profiles:
      - opspilot
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "${ELASTIC_PASSWORD}:", "http://127.0.0.1:9200/_cluster/health"]
  
  metis:
    image: ${DOCKER_IMAGE_METIS}
    restart: always
    environment:
      DB_URI: postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/metis
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      MODE: DEBUG
      TRANSFORMERS_OFFLINE: true
      HF_DATASETS_OFFLINE: true
      ADMIN_PASSWORD: password
    profiles:
      - opspilot
    networks:
      - prod
    depends_on:
      postgres:
        condition: service_healthy
      system-manager:
        condition: service_healthy