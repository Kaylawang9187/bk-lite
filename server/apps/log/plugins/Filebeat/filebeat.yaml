# ================================== General ===================================
name: "filebeat-${node.ip}-${node.cloud_region}"
tags: ["bk-lite", "logstash"]

# ================================== Logging ===================================
logging.level: info
logging.to_files: true
logging.files:
  path: /opt/fusion-collectors/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0600

# ================================== Outputs ===================================
output.logstash:
  hosts: ["localhost:15044"]
  worker: 1
  bulk_max_size: 2048
  timeout: 30s
  max_retries: 3

# ================================== Inputs ===================================
filebeat.inputs:
- type: filestream
  id: filebeat-self-logs
  enabled: true
  paths:
    - /opt/fusion-collectors/log/filebeat/filebeat-*.ndjson

  fields:
    log_type: "filebeat"
    component: "self"
    node_ip: "${node.ip}"
    cloud_region: "${node.cloud_region}"
  fields_under_root: false

  close_inactive: 1m
  close_removed: true
  clean_removed: true
  prospector.scanner.check_interval: 10s

  processors:
    - decode_json_fields:
        fields: ["message"]
        target: "parsed_message"
        add_error_key: true

    - script:
        lang: javascript
        source: >
          function process(event) {
            var evt = event.Get();
            if (evt.parsed_message && evt.parsed_message.monitoring) {
              var m = evt.parsed_message.monitoring.metrics;
              
              // 核心指标提取
              if (m.filebeat) {
                event.Put("events_active", m.filebeat.events.active || 0);
                event.Put("events_done", m.filebeat.events.done || 0);
                event.Put("harvester_running", m.filebeat.harvester.running || 0);
              }
              
              if (m.beat) {
                event.Put("memory_mb", Math.round((m.beat.memstats.memory_alloc || 0) / 1024 / 1024));
                event.Put("uptime_s", Math.round((m.beat.info.uptime.ms || 0) / 1000));
              }
              
              if (m.libbeat && m.libbeat.output) {
                event.Put("output_acked", m.libbeat.output.events.acked || 0);
              }
              
              event.Put("log_level", evt.parsed_message["log.level"] || "info");
              event.Put("logger", evt.parsed_message["log.logger"] || "filebeat");
              
              // 简化消息
              event.Put("message", "Filebeat: " + (m.filebeat ? m.filebeat.events.done : 0) + 
                       "完成 " + Math.round((m.beat ? m.beat.memstats.memory_alloc : 0) / 1024 / 1024) + "MB");
            }
            return event;
          }

    # 3. 清理临时字段
    - drop_fields:
        fields: ["parsed_message"]
        ignore_missing: true
