[
  {
    "id": "Filebeat_linux",
    "name": "Filebeat",
    "controller_default_run": false,
    "icon": "",
    "node_operating_system": "linux",
    "service_type": "exec",
    "executable_path": "/opt/fusion-collectors/bin/filebeat",
    "execute_parameters": "-c %s",
    "validation_parameters": "",
    "default_template": "",
    "introduction": "Filebeat is a lightweight shipper for forwarding and centralizing log data using official Logstash protocol.",
    "enabled_default_config": true,
    "default_config": {
      "nats": "# ================================== General ===================================\nname: \"filebeat-${node.ip}-${node.cloud_region}\"\ntags: [\"bk-lite\", \"logstash\"]\n\n# ================================== Logging ===================================\nlogging.level: info\nlogging.to_files: true\nlogging.files:\n  path: /opt/fusion-collectors/log/filebeat\n  name: filebeat\n  keepfiles: 7\n  permissions: 0600\n\n# ================================== Outputs ===================================\noutput.logstash:\n  hosts: [\"localhost:15044\"]\n  worker: 1\n  bulk_max_size: 2048\n  timeout: 30s\n  max_retries: 3\n\n# ================================== Inputs ===================================\nfilebeat.inputs:\n- type: filestream\n  id: filebeat-self-logs\n  enabled: true\n  paths:\n    - /opt/fusion-collectors/log/filebeat/filebeat-*.ndjson\n\n  fields:\n    log_type: \"filebeat\"\n    component: \"self\"\n    node_ip: \"${node.ip}\"\n    cloud_region: \"${node.cloud_region}\"\n  fields_under_root: false\n\n  close_inactive: 1m\n  close_removed: true\n  clean_removed: true\n  prospector.scanner.check_interval: 10s\n\n  processors:\n    - decode_json_fields:\n        fields: [\"message\"]\n        target: \"parsed_message\"\n        add_error_key: true\n\n    - script:\n        lang: javascript\n        source: >\n          function process(event) {\n            var evt = event.Get();\n            if (evt.parsed_message && evt.parsed_message.monitoring) {\n              var m = evt.parsed_message.monitoring.metrics;\n              \n              // 核心指标提取\n              if (m.filebeat) {\n                event.Put(\"events_active\", m.filebeat.events.active || 0);\n                event.Put(\"events_done\", m.filebeat.events.done || 0);\n                event.Put(\"harvester_running\", m.filebeat.harvester.running || 0);\n              }\n              \n              if (m.beat) {\n                event.Put(\"memory_mb\", Math.round((m.beat.memstats.memory_alloc || 0) / 1024 / 1024));\n                event.Put(\"uptime_s\", Math.round((m.beat.info.uptime.ms || 0) / 1000));\n              }\n              \n              if (m.libbeat && m.libbeat.output) {\n                event.Put(\"output_acked\", m.libbeat.output.events.acked || 0);\n              }\n              \n              event.Put(\"log_level\", evt.parsed_message[\"log.level\"] || \"info\");\n              event.Put(\"logger\", evt.parsed_message[\"log.logger\"] || \"filebeat\");\n              \n              // 简化消息\n              event.Put(\"message\", \"Filebeat: \" + (m.filebeat ? m.filebeat.events.done : 0) + \n                       \"完成 \" + Math.round((m.beat ? m.beat.memstats.memory_alloc : 0) / 1024 / 1024) + \"MB\");\n            }\n            return event;\n          }\n\n    # 3. 清理临时字段\n    - drop_fields:\n        fields: [\"parsed_message\"]\n        ignore_missing: true\n"
    }
  }
]
