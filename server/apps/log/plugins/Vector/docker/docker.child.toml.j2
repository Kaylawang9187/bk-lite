# ====================================
# Docker 日志源（含字段映射）
# ====================================
[sources.docker_{{ instance_id }}]
type = "docker_logs"
docker_host = "{{ docker_host }}"
auto_partial_merge = true
{% if include_containers %}
include_containers = [{{ include_containers | map('tojson') | join(', ') }}]
{% elif exclude_containers %}
exclude_containers = [{{ exclude_containers | map('tojson') | join(', ') }}]
{% endif %}

{% if start_pattern %}
[transforms.multiline_{{ instance_id }}]
type = "multiline"
inputs = ["docker_{{ instance_id }}"]
start_pattern = '{{ start_pattern }}'
mode = "halt_before"

# ====================================
# enrich（字段补全）
# ====================================
[transforms.docker_enrich_{{ instance_id }}]
type = "remap"
inputs = ["multiline_{{ instance_id }}"]
source = '''
.collect_type = "docker"
.instance_id = "{{ instance_id }}"
.streams = ["default"]
'''

{% else %}

# ====================================
# enrich（字段补全）
# ====================================
[transforms.docker_enrich_{{ instance_id }}]
type = "remap"
inputs = ["docker_{{ instance_id }}"]
source = '''
.collect_type = "docker"
.instance_id = "{{ instance_id }}"
.streams = ["default"]
'''

{% endif %}

# ====================================
# 日志数据流
# ====================================

[transforms.router_{{ instance_id }}]
type = "route"
inputs = ["docker_enrich_{{ instance_id }}"]
{% for route in streams %}
route.{{ instance_id }}_{{ route.stream_id }} = '{{ route.condition }}'
{% endfor %}

{% for stream in streams %}
[transforms.{{ instance_id }}_{{ stream.stream_id }}]
type = "remap"
inputs = ["router_{{ instance_id }}.{{ instance_id }}_{{ stream.stream_id }}"]
source = '''
.streams = push!(get!(.streams, []), "{{ stream.stream_id }}")
'''
{% endfor %}

# ====================================
# sinks
# ====================================

[sinks.vmlogs_{{ instance_id }}]
type = "nats"
inputs = [
    {% for stream in streams %}
    "{{ instance_id }}_{{ stream.stream_id }}",
    {% endfor %}
]
subject = "vector"
url = "nats://${NATS_SERVERS}"

[sinks.vmlogs_{{ instance_id }}.auth]
strategy = "user_password"

[sinks.vmlogs_{{ instance_id }}.auth.user_password]
user = "${NATS_USERNAME}"
password = "${NATS_PASSWORD}"

[sinks.vmlogs_{{ instance_id }}.encoding]
codec = "json"
