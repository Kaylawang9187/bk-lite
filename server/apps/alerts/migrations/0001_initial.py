# Generated by Django 4.2.7 on 2025-05-30 03:15

import apps.alerts.utils.util
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Alert",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("alert_id", models.CharField(db_index=True, help_text="告警ID", max_length=100, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待响应"),
                            ("processing", "处理中"),
                            ("resolved", "已处理"),
                            ("closed", "已关闭"),
                            ("unassigned", "未分派"),
                        ],
                        db_index=True,
                        default="unassigned",
                        help_text="告警状态",
                        max_length=32,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[("warning", "预警"), ("severity", "严重"), ("fatal", "致命")],
                        db_index=True,
                        help_text="级别",
                        max_length=32,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, help_text="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True, help_text="更新时间")),
                ("title", models.CharField(help_text="标题", max_length=200)),
                ("content", models.TextField(help_text="内容")),
                ("labels", models.JSONField(default=dict, help_text="标签")),
                ("first_event_time", models.DateTimeField(blank=True, help_text="首次事件时间", null=True)),
                ("last_event_time", models.DateTimeField(blank=True, help_text="最近事件时间", null=True)),
                ("item", models.CharField(blank=True, db_index=True, help_text="事件指标", max_length=128, null=True)),
                (
                    "resource_id",
                    models.CharField(blank=True, db_index=True, help_text="资源唯一ID", max_length=128, null=True),
                ),
                ("resource_name", models.CharField(blank=True, help_text="资源名称", max_length=128, null=True)),
                ("resource_type", models.CharField(blank=True, help_text="资源类型", max_length=64, null=True)),
                (
                    "operate",
                    models.CharField(
                        blank=True,
                        choices=[("acknowledge", "认领"), ("close", "关闭"), ("reassign", "转派"), ("assign", "分派")],
                        help_text="告警操作",
                        max_length=64,
                        null=True,
                    ),
                ),
                ("operator", models.JSONField(blank=True, default=list, help_text="告警处理人")),
                ("source_name", models.CharField(blank=True, help_text="告警源名称", max_length=100, null=True)),
                ("fingerprint", models.CharField(db_index=True, help_text="告警指纹", max_length=32)),
            ],
            options={"db_table": "alerts_alert", "ordering": ["-updated_at"],},
        ),
        migrations.CreateModel(
            name="AlertSource",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created Time")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated Time")),
                ("created_by", models.CharField(default="", max_length=32, verbose_name="Creator")),
                ("updated_by", models.CharField(default="", max_length=32, verbose_name="Updater")),
                ("name", models.CharField(help_text="告警源名称", max_length=100)),
                ("source_id", models.CharField(db_index=True, help_text="告警源ID", max_length=100, unique=True)),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("prometheus", "Prometheus"),
                            ("zabbix", "Zabbix"),
                            ("webhook", "Webhook"),
                            ("log", "日志"),
                            ("monitor", "监控"),
                            ("cloud", "云监控"),
                        ],
                        help_text="告警源类型",
                        max_length=20,
                    ),
                ),
                ("config", models.JSONField(default=dict, help_text="告警源配置")),
                (
                    "secret",
                    models.CharField(default=apps.alerts.utils.util.gen_app_secret, max_length=100, verbose_name="密钥"),
                ),
                ("logo", models.TextField(blank=True, help_text="告警源logo", null=True)),
                (
                    "access_type",
                    models.CharField(
                        choices=[("built_in", "内置"), ("customize", "自定义")],
                        default="built_in",
                        help_text="告警源接入类型",
                        max_length=64,
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True, help_text="是否启用")),
                ("is_effective", models.BooleanField(default=True, help_text="是否生效")),
                ("description", models.TextField(blank=True, help_text="告警源描述", null=True)),
                ("last_active_time", models.DateTimeField(blank=True, help_text="最近活跃时间", null=True)),
                ("is_delete", models.BooleanField(db_index=True, default=False, help_text="是否删除")),
            ],
            managers=[("all_objects", django.db.models.manager.Manager()),],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("raw_data", models.JSONField(help_text="原始数据")),
                ("received_at", models.DateTimeField(auto_now_add=True, db_index=True, help_text="接收时间")),
                ("title", models.CharField(help_text="事件标题", max_length=200)),
                ("description", models.TextField(blank=True, help_text="事件描述", null=True)),
                (
                    "level",
                    models.CharField(
                        choices=[("remain", "提醒"), ("warning", "预警"), ("severity", "严重"), ("fatal", "致命")],
                        db_index=True,
                        help_text="级别",
                        max_length=32,
                    ),
                ),
                ("start_time", models.DateTimeField(db_index=True, help_text="事件开始时间")),
                ("end_time", models.DateTimeField(blank=True, db_index=True, help_text="事件结束时间", null=True)),
                ("labels", models.JSONField(default=dict, help_text="事件标签")),
                (
                    "action",
                    models.CharField(
                        choices=[("created", "产生"), ("closed", "关闭")],
                        default="created",
                        help_text="事件动作",
                        max_length=32,
                    ),
                ),
                ("rule_id", models.CharField(blank=True, help_text="触发该事件的规则ID", max_length=100, null=True)),
                ("event_id", models.CharField(db_index=True, help_text="事件唯一ID", max_length=100, unique=True)),
                ("external_id", models.CharField(blank=True, help_text="外部事件ID", max_length=128, null=True)),
                ("item", models.CharField(blank=True, db_index=True, help_text="事件指标", max_length=128, null=True)),
                (
                    "resource_id",
                    models.CharField(blank=True, db_index=True, help_text="资源唯一ID", max_length=64, null=True),
                ),
                ("resource_type", models.CharField(blank=True, help_text="资源类型", max_length=64, null=True)),
                ("resource_name", models.CharField(blank=True, help_text="资源名称", max_length=128, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "待响应"), ("processing", "处理中"), ("resolved", "已处理"), ("closed", "已关闭")],
                        default="pending",
                        help_text="事件状态",
                        max_length=32,
                    ),
                ),
                ("assignee", models.JSONField(blank=True, default=list, help_text="事件责任人")),
                ("note", models.TextField(blank=True, help_text="事件备注", null=True)),
                ("value", models.FloatField(blank=True, null=True, verbose_name="事件值")),
                (
                    "source",
                    models.ForeignKey(
                        help_text="告警源", on_delete=django.db.models.deletion.CASCADE, to="alerts.alertsource"
                    ),
                ),
            ],
            options={"db_table": "alerts_event", "ordering": ["-received_at"],},
        ),
        migrations.AddIndex(
            model_name="alertsource",
            index=models.Index(fields=["name", "source_type"], name="alerts_aler_name_8938e7_idx"),
        ),
        migrations.AddField(model_name="alert", name="events", field=models.ManyToManyField(to="alerts.event"),),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["source", "received_at"], name="alerts_even_source__4b038c_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=django.contrib.postgres.indexes.GinIndex(fields=["labels"], name="event_labels_gin"),
        ),
        migrations.AddIndex(
            model_name="alert", index=models.Index(fields=["status", "level"], name="alert_status_level_idx"),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=django.contrib.postgres.indexes.BTreeIndex(fields=["created_at"], name="alert_created_btree"),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=django.contrib.postgres.indexes.GinIndex(fields=["operator"], name="alert_operator_gin"),
        ),
    ]
