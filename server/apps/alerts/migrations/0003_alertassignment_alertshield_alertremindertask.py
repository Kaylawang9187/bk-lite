# Generated by Django 4.2.7 on 2025-06-11 10:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("alerts", "0002_level_alter_alert_level_alter_event_level_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlertAssignment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created Time")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated Time")),
                ("created_by", models.CharField(default="", max_length=32, verbose_name="Creator")),
                ("updated_by", models.CharField(default="", max_length=32, verbose_name="Updater")),
                ("name", models.CharField(help_text="分派策略名称", max_length=200, unique=True)),
                (
                    "match_type",
                    models.CharField(choices=[("all", "全部匹配"), ("filter", "过滤匹配")], help_text="匹配类型", max_length=32),
                ),
                ("match_rules", models.JSONField(default=list, help_text="匹配规则")),
                ("personnel", models.JSONField(blank=True, default=list, help_text="分派人员", null=True)),
                ("notify_channels", models.JSONField(default=list, help_text="通知渠道")),
                ("notification_scenario", models.JSONField(default=list, help_text="通知场景")),
                ("config", models.JSONField(default=dict, help_text="分派配置")),
                ("notification_frequency", models.JSONField(blank=True, default=dict, help_text="通知频率配置", null=True)),
                ("is_active", models.BooleanField(db_index=True, default=True, help_text="是否启用")),
            ],
            options={"db_table": "alerts_alert_assignment",},
        ),
        migrations.CreateModel(
            name="AlertShield",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created Time")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated Time")),
                ("created_by", models.CharField(default="", max_length=32, verbose_name="Creator")),
                ("updated_by", models.CharField(default="", max_length=32, verbose_name="Updater")),
                ("name", models.CharField(help_text="屏蔽策略名称", max_length=200, unique=True)),
                (
                    "match_type",
                    models.CharField(choices=[("all", "全部匹配"), ("filter", "过滤匹配")], help_text="匹配类型", max_length=32),
                ),
                ("match_rules", models.JSONField(default=list, help_text="匹配规则")),
                ("suppression_time", models.JSONField(default=dict, help_text="屏蔽时间配置")),
                ("is_active", models.BooleanField(db_index=True, default=True, help_text="是否启用")),
            ],
            options={"db_table": "alerts_alert_shield",},
        ),
        migrations.CreateModel(
            name="AlertReminderTask",
            fields=[
                (
                    "alert",
                    models.OneToOneField(
                        help_text="关联的告警",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="alerts.alert",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, help_text="是否激活")),
                ("reminder_count", models.IntegerField(default=0, help_text="已提醒次数")),
                ("current_frequency_minutes", models.IntegerField(help_text="当前提醒频率(分钟)")),
                ("current_max_reminders", models.IntegerField(help_text="当前最大提醒次数")),
                ("next_reminder_time", models.DateTimeField(help_text="下次提醒时间")),
                ("last_reminder_time", models.DateTimeField(blank=True, help_text="上次提醒时间", null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        help_text="分派策略", on_delete=django.db.models.deletion.CASCADE, to="alerts.alertassignment"
                    ),
                ),
            ],
            options={
                "db_table": "alerts_reminder_task",
                "indexes": [
                    models.Index(fields=["is_active", "next_reminder_time"], name="alerts_remi_is_acti_33c4e2_idx")
                ],
            },
        ),
    ]
